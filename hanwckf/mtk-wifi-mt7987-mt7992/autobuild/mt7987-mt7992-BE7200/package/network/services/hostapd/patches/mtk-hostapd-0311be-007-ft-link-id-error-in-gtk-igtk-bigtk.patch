Index: hostapd-2022-07-29-b704dc72/src/ap/wpa_auth_ft.c
===================================================================
--- hostapd-2022-07-29-b704dc72.orig/src/ap/wpa_auth_ft.c
+++ hostapd-2022-07-29-b704dc72/src/ap/wpa_auth_ft.c
@@ -961,7 +961,7 @@ static u8 * ml_ft_gtk_subelem(struct wpa
 	subelem[1] = subelem_len - 2;
 	/* Key ID in B0-B1 of Key Info */
 	WPA_PUT_LE16(&subelem[2], gsm->GN & 0x03);
-	subelem[4] = (link->link_id & 0x0f) << 4;
+	subelem[4] = (link->link_id & 0x0f);
 	subelem[5] = gsm->GTK_len;
 	ft_auth_get_seqnum(sm->wpa_auth, NULL, gsm->GN, subelem + 6);
 	if (aes_wrap(kek, kek_len, key_len / 8, key, subelem + 14)) {
@@ -1015,7 +1015,7 @@ static u8 * ml_ft_igtk_subelem(struct wp
 	pos += 2;
 	ft_auth_get_seqnum(sm->wpa_auth, NULL, gsm->GN_igtk, pos);
 	pos += 6;
-	*pos++ = (link->link_id & 0x0f) << 4;
+	*pos++ = (link->link_id & 0x0f);
 	*pos++ = igtk_len;
 	igtk = gsm->IGTK[gsm->GN_igtk - 4];
 	if (conf->disable_gtk || sm->wpa_key_mgmt == WPA_KEY_MGMT_OSEN) {
@@ -1078,7 +1078,7 @@ static u8 * ml_ft_bigtk_subelem(struct w
 	pos += 2;
 	ft_auth_get_seqnum(sm->wpa_auth, NULL, gsm->GN_bigtk, pos);
 	pos += 6;
-	*pos++ = (link->link_id & 0x0f) << 4;
+	*pos++ = (link->link_id & 0x0f);
 	*pos++ = bigtk_len;
-	bigtk = gsm->IGTK[gsm->GN_bigtk - 6];
+	bigtk = gsm->BIGTK[gsm->GN_bigtk - 6];
 	if (sm->wpa_key_mgmt == WPA_KEY_MGMT_OSEN) {
@@ -1879,7 +1879,8 @@ static int wpa_ft_rrb_init_r0kh_seq(struct ft_remote_r0kh *r0kh)
 static void wpa_ft_rrb_lookup_r0kh(struct wpa_authenticator *wpa_auth,
 				   const u8 *f_r0kh_id, size_t f_r0kh_id_len,
 				   struct ft_remote_r0kh **r0kh_out,
-				   struct ft_remote_r0kh **r0kh_wildcard)
+				   struct ft_remote_r0kh **r0kh_wildcard,
+				   const u8 *src_addr)
 {
 	struct ft_remote_r0kh *r0kh;
 
@@ -1894,8 +1894,10 @@ static void wpa_ft_rrb_lookup_r0kh(struct wpa_authenticator *wpa_auth,
 		if (r0kh->id_len == 1 && r0kh->id[0] == '*')
 			*r0kh_wildcard = r0kh;
 		if (f_r0kh_id && r0kh->id_len == f_r0kh_id_len &&
		    os_memcmp_const(f_r0kh_id, r0kh->id, f_r0kh_id_len) == 0)
			*r0kh_out = r0kh;
+		if (src_addr && os_memcmp(r0kh->addr, src_addr, ETH_ALEN) == 0)
+			break;
 	}
 
 	if (!*r0kh_out && !*r0kh_wildcard)
@@ -2230,7 +2232,7 @@ static void wpa_ft_block_r0kh(struct wpa_authenticator *wpa_auth,
 		return;
 
 	wpa_ft_rrb_lookup_r0kh(wpa_auth, f_r0kh_id, f_r0kh_id_len,
-			       &r0kh, &r0kh_wildcard);
+			       &r0kh, &r0kh_wildcard, NULL);
 
 	if (!r0kh_wildcard) {
 		/* r0kh removed after neg_timeout and might need re-adding */
@@ -2304,7 +2306,7 @@ static int wpa_ft_pull_pmk_r1(struct wpa_state_machine *sm,
 	sm->ft_pending_pull_left_retries--;
 
 	wpa_ft_rrb_lookup_r0kh(sm->wpa_auth, sm->r0kh_id, sm->r0kh_id_len,
-			       &r0kh, &r0kh_wildcard);
+			       &r0kh, &r0kh_wildcard, NULL);
 
 	/* Keep r0kh sufficiently long in the list for seq num check */
 	r0kh_timeout = sm->wpa_auth->conf.rkh_pull_timeout / 1000 +
@@ -2680,7 +2680,7 @@ static u8 * wpa_ft_bigtk_subelem(struct
 	wpa_auth_get_seqnum(sm->wpa_auth, NULL, gsm->GN_bigtk, pos);
 	pos += 6;
 	*pos++ = bigtk_len;
-	bigtk = gsm->IGTK[gsm->GN_bigtk - 6];
+	bigtk = gsm->BIGTK[gsm->GN_bigtk - 6];
 	if (sm->wpa_key_mgmt == WPA_KEY_MGMT_OSEN) {
 		/*
 		 * Provide unique random BIGTK to each OSEN STA to prevent use
@@ -4656,7 +4658,7 @@ static int wpa_ft_rrb_rx_r1(struct wpa_authenticator *wpa_auth,
 	}
 
 	wpa_ft_rrb_lookup_r0kh(wpa_auth, f_r0kh_id, f_r0kh_id_len, &r0kh,
-			       &r0kh_wildcard);
+			       &r0kh_wildcard, src_addr);
 	if (r0kh) {
 		key = r0kh->key;
 		key_len = sizeof(r0kh->key);
@@ -4955,7 +4957,7 @@ static int wpa_ft_rrb_rx_seq(struct wpa_authenticator *wpa_auth,
 
 	if (!to_r0kh) {
 		wpa_ft_rrb_lookup_r0kh(wpa_auth, f_r0kh_id, f_r0kh_id_len,
-				       &r0kh, &r0kh_wildcard);
+				       &r0kh, &r0kh_wildcard, src_addr);
 		if (!r0kh_wildcard &&
 		    (!r0kh || os_memcmp(r0kh->addr, src_addr, ETH_ALEN) != 0)) {
 			wpa_hexdump(MSG_DEBUG, "FT: Did not find R0KH-ID",