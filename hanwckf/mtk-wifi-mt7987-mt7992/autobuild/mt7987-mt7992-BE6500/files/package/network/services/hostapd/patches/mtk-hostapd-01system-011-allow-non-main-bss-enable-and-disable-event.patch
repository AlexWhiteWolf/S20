From dc6d8e880d8848bc8f1e6122a03ec49b765b6807 Mon Sep 17 00:00:00 2001
From: mtk20656 <chank.chen@mediatek.com>
Date: Tue, 6 Feb 2024 18:03:46 +0800
Subject: [PATCH] allow non-main bss enable and disable event.

Signed-off-by: mtk20656 <chank.chen@mediatek.com>
---
 src/drivers/driver_nl80211.c | 42 ++++++++++++++++++++++++++++++------
 1 file changed, 36 insertions(+), 6 deletions(-)

diff --git a/src/drivers/driver_nl80211.c b/src/drivers/driver_nl80211.c
index 2e8077e..587fe1d 100644
--- a/src/drivers/driver_nl80211.c
+++ b/src/drivers/driver_nl80211.c
@@ -34,6 +34,7 @@
 #include "radiotap.h"
 #include "radiotap_iter.h"
 #include "rfkill.h"
+#include "ap/hostapd.h"
 #include "driver_nl80211.h"
 
 
@@ -1175,6 +1176,26 @@ static void nl80211_refresh_mac(struct wpa_driver_nl80211_data *drv,
 	}
 }
 
+struct hostapd_data *get_hapd_by_ifname(void *org_hapd, char *if_name)
+{
+	struct hostapd_data *hapd;
+	struct hostapd_iface *iface;
+	int i = 0;
+
+	if (org_hapd) {
+		hapd = (struct hostapd_data *)org_hapd;
+		iface = hapd->iface;
+		if (iface) {
+			for (i = 0; i < iface->num_bss; i++) {
+				hapd = iface->bss[i];
+				if (os_strcmp(if_name, hapd->conf->iface) == 0)
+					return hapd;
+			}
+		}
+	}
+
+	return NULL;
+}
 
 static void wpa_driver_nl80211_event_rtm_newlink(void *ctx,
 						 struct ifinfomsg *ifi,
@@ -1189,6 +1210,7 @@ static void wpa_driver_nl80211_event_rtm_newlink(void *ctx,
 	char ifname[IFNAMSIZ + 1];
 	char extra[100], *pos, *end;
 	int init_failed;
+	struct hostapd_data *hapd;
 
 	extra[0] = '\0';
 	pos = extra;
@@ -1253,9 +1275,13 @@ static void wpa_driver_nl80211_event_rtm_newlink(void *ctx,
 		wpa_printf(MSG_DEBUG, "nl80211: Interface down (%s/%s)",
 			   namebuf, ifname);
 		if (os_strcmp(drv->first_bss->ifname, ifname) != 0) {
-			wpa_printf(MSG_DEBUG,
-				   "nl80211: Not the main interface (%s) - do not indicate interface down",
-				   drv->first_bss->ifname);
+			hapd = get_hapd_by_ifname((struct hostapd_data *)drv->ctx, ifname);
+			if (hapd) {
+				drv->if_disabled = 1;
+				wpa_printf(MSG_DEBUG, "nl80211: disbale the non-main interface (%s)", ifname);
+				wpa_supplicant_event((void *)hapd,
+					     EVENT_INTERFACE_DISABLED, NULL);
+			}
 		} else if (drv->ignore_if_down_event) {
 			wpa_printf(MSG_DEBUG, "nl80211: Ignore interface down "
 				   "event generated by mode change");
@@ -1289,9 +1315,13 @@ static void wpa_driver_nl80211_event_rtm_newlink(void *ctx,
 		wpa_printf(MSG_DEBUG, "nl80211: Interface up (%s/%s)",
 			   namebuf, ifname);
 		if (os_strcmp(drv->first_bss->ifname, ifname) != 0) {
-			wpa_printf(MSG_DEBUG,
-				   "nl80211: Not the main interface (%s) - do not indicate interface up",
-				   drv->first_bss->ifname);
+			hapd = get_hapd_by_ifname((struct hostapd_data *)drv->ctx, ifname);
+			if (hapd) {
+				drv->if_disabled = 0;
+				wpa_printf(MSG_DEBUG, "nl80211: enable the non-main interface (%s)", ifname);
+				wpa_supplicant_event((void *)hapd,
+					     EVENT_INTERFACE_ENABLED, NULL);
+			}
 		} else if (if_nametoindex(drv->first_bss->ifname) == 0) {
 			wpa_printf(MSG_DEBUG, "nl80211: Ignore interface up "
 				   "event since interface %s does not exist",
-- 
2.18.0

